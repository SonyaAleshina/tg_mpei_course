//https://leetcode.com/problems/clumsy-factorial/
class Solution {
public:
    int clumsy(int N) {
        if (N==1) return N;
        else
        {vector<int> Proisv(0);
        int i=N; 
        while (i-1>0) 
        {
            Proisv.push_back(i*(i-1)); 
            i-=4;
        }
         if (i==1) Proisv.push_back(i); 
        
        vector<int> Del(0); 
        i=N-2; int j=0;
        while (i>0&&j<Proisv.size())
        {
            Del.push_back(Proisv[j]/i);
            j++; i-=4; 
        }
        if (j==Proisv.size()-1)  Del.push_back(Proisv[Proisv.size()-1]);
        
        for(i=1;i<Del.size();i++)
        {Del[i]*=-1; 
        printf("%d ",Del[i]);}
        

        int R=0; 
        i=N-3; j=0; 
        while(i>0)
        {
          R+=Del[j]+i; 
          j++; i-=4; 
        }
        if (j==Del.size()-1) R+=Del[Del.size()-1];
        
        return R; }
    }
};
