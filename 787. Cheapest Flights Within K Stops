//https://leetcode.com/problems/cheapest-flights-within-k-stops/
class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {
        vector<vector<int>> x(K+2, vector<int>(n, 1e9));
        x[0][src] = 0; 
        bool fl;  
        int ans = x[0][dst]; 
        
        for(int i=1; i<K+2; i++){
            fl = false; 
            for(auto y:flights){
                if (x[i][y[1]] > x[i-1][y[0]] + y[2]){
                    fl = true; 
                    x[i][y[1]] = x[i-1][y[0]] + y[2];
                }
            }
            ans = min(ans, x[i][dst]);
            if (fl == false) break; 
        }
        
        return ans>=1e9?-1:ans; 
    }
};
