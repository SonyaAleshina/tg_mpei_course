//https://leetcode.com/problems/find-peak-element/
class Solution {
public:
void Poisk(vector<int> x, int i, int j, bool &fl, int &k)
{
    int d=(i+j)/2;
    if (d!=0&&d!=x.size()-1)
    {
    if (x[d]>x[d-1]&&x[d]>x[d+1]) {fl=true; k=d;}
     else {if (fl==false&&i<d-1) Poisk(x,i,d,fl,k);
             else if (fl==false&&0==d-1) {if (x[0]>x[d]) {fl=true; k=d-1;}}
           if (fl==false&&d+1<j) Poisk(x,d,j,fl,k);
             else if (fl==false&&d+1==x.size()-1) if (x[d+1]>x[d]) {fl=true; k=d+1;}}}
    else 
    {
      //pr
      if (fl==false&&d==0) {if (x[d]>x[d+1]) {fl=true; k=d;}}; 
      if (fl==false&&d==x.size()-1) if (x[d]>x[d-1]) {fl=true; k=d;}
    }
}
    int findPeakElement(vector<int>& nums) {
        int i=0; 
        int n; 
        n=nums.size(); 
        if (n==1) return 0; 
        else 
        {if (n==2) {if (nums[0]>nums[1]) return 0; 
                     else return 1;}
         else 
         {
        bool fl=false;
        int k=0;
        Poisk(nums,i,n-1,fl,k);
        return k;
        }}
    }
};
