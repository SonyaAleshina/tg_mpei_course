//https://leetcode.com/problems/permutation-sequence/


class Solution {
public:
    string getPermutation(int n, int k) {
        int p,t,s,i,j,l; 
        bool fl; 
        set <int> st;  
        string pr;
        
         s=0;
        
        for(i=0;i<n;i++)
            st.insert(i+1);
        while (n>0) {
        p=1; t=0; 
        for(i=0; i<n; i++)
            p*=(i+1);
        if (k==0) k=p; 
        t=p/n;//число перестановок на одну цифру 
        i=0; fl=false;
        while (i<=t||fl!=true)
        {
            if (n-1==0) {j=1;
                        set <int> :: iterator jt = st.begin(); printf("%d\n",*jt);
                        s+=*jt; fl=true;i++;}
            else{
            if (k/t==i) {if (k%t==0) {
                                      set <int> :: iterator jt = st.begin(); 
                                      if (i!=1) for (l=0;l<i-1;l++) jt++; 
                                     s+=pow(10,n-1)*(*jt);
                                     st.erase(*jt); }
                          else {
                                set <int> :: iterator jt = st.begin(); 
                              if (i!=0) for (l=0;l<i;l++) jt++;
                              s+=pow(10,n-1)*(*jt);
                                st.erase(*jt); };
                        fl=true;}; };
            i+=1; 
        };
        k = k%t; 
        n-=1; };
        
        
     pr = to_string(s);
        
            
      return pr;    
    }
};
