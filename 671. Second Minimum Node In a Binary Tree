//https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
void Poisk(TreeNode* tree, set<int> &c)
{

    if (c.find(tree->val)==c.end()) c.insert(tree->val); 
    if (tree->left!=nullptr) {Poisk(tree->left, c);
                              Poisk(tree->right, c);}
    

}
    int findSecondMinimumValue(TreeNode* root) {
        set<int> c; 
        Poisk(root, c); 
        if (c.size()<2) return -1;  
         else {auto ind = c.begin(); 
               
               ind++; 
               int k=*ind; 
               return k;} 
    }
};
