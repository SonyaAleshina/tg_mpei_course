//https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string/
class Solution {
public:
    string removeDuplicates(string S) {
        int n,i,m;
        char k; 
        bool fl; 
        stack<char> x; 
        
        n=S.length(); 
        i=n-1; 
        
        while(i>=0)
        {
            x.push(S[i]);
            i--;
        };
        
        fl=false; m=0;
        
        while (fl==false)
        {
        stack<char> dop; 
        while (!x.empty())
        {
            k=x.top(); x.pop(); 
            if (!x.empty())
            {
            if (x.top()==k) x.pop(); 
              else dop.push(k); }
             else dop.push(k);
        }; 
          x=dop; m++;
          fl=true; 
          while(fl==true&&!dop.empty())
          {
              k=dop.top(); dop.pop();
              if (!dop.empty()){
              if (dop.top()==k) fl=false; };
          };
            if (fl==true&&m%2!=0)
            {
               stack<char> d;
               while (!x.empty()) {d.push(x.top()); x.pop();}
               x=d; 
            }
          
        }; 
        
        n=0; 
        
        vector<char> str; 
        while (!x.empty())
        {
            str.push_back(x.top()); 
            n++;
            x.pop();
        };
        
        char *p; 
        p = new char[n+1]; 
        p[n]='\0'; 
        
        for(i=0;i<n;i++)
            p[i]=str[i];
        
        return p; 
        
    }
};
